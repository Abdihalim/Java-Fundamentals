Java Static keyword
-------------------

Understanding problem without static variable

Example 1
---------

class Student{  
     int rollno;  
     String name;  
     String college="ITS";  
}

uppose there are 500 students in my college, now all instance data members will get memory each time when object is created.All student have its unique rollno and name so instance data member is good.Here, college refers to the common property of all objects.If we make it static,this field will get memory only once.

Note: Java static property is shared to all objects

Example 2: static variable
--------------------------

    //Program of static variable  
      
    class Student8{  
       int rollno;  
       String name;  
       static String college ="ITS";  
         
       Student8(int r,String n){  
       rollno = r;  
       name = n;  
       }  
     void display () {
     
     System.out.println(rollno+" "+name+" "+college);
     
     }
      
     public static void main(String args[]){  
     Student8 s1 = new Student8(111,"Karan");  
     Student8 s2 = new Student8(222,"Aryan");  
       
     s1.display();  
     s2.display();  
     }  
    }  

Example 3
---------
    
Program of counter without static variable
------------------------------------------
    class Counter{  
    int count=0;//will get memory when instance is created  
      
    Counter(){  
    count++;  
    System.out.println(count);  
    }  
      
    public static void main(String args[]){  
      
    Counter c1=new Counter();  
    Counter c2=new Counter();  
    Counter c3=new Counter();  
      
     }  
    }  
    

Example 4
---------
Program of counter by static variable
-------------------------------------
    class Counter2{  
    static int count=0;//will get memory only once and retain its value  
      
    Counter2(){  
    count++;  
    System.out.println(count);  
    }  
      
    public static void main(String args[]){  
      
    Counter2 c1=new Counter2();  
    Counter2 c2=new Counter2();  
    Counter2 c3=new Counter2();  
      
     }  
    }  

